---
- hosts: localhost
  gather_facts: no

  vars:
    ansible_remote_tmp: /runner/.ansible/tmp

  tasks:
    - name: Use username/password if defined
      set_fact:
        authorization: "Basic {{ (username + ':' + password) | b64encode }}"

    - name: Get local-cluster id
      ansible.builtin.uri:
        url: "https://{{ api_endpoint }}/v1/clusters"
        method: GET
        validate_certs: no
        headers:
          authorization: "{{ authorization }}"
        status_code: [200]
      register: clusters

    - name: Cosign integration
      herve4m.rhacs_configuration.rhacs_signature:
        name: cosign
        cosign_pub_keys:
          - name: cosign.pub
            key: "{{ lookup('ansible.builtin.file', 'cosign.pub') }}"
        state: present
        rhacs_host: "{{ api_endpoint }}"
        rhacs_username: admin
        rhacs_password: "{{ password }}"
      register: cosign_integration

    - name: Trusted Signature Policy
      herve4m.rhacs_configuration.rhacs_policy:
        policy: Trusted Signature Policy
        state: present
        rhacs_host: "{{ api_endpoint }}"
        rhacs_username: admin
        rhacs_password: "{{ password }}"
        data:
          name: Trusted Signature Policy
          description: Validate image signatures
          rationale: ''
          remediation: ''
          disabled: false
          categories:
          - Security Best Practices
          - Supply Chain Security
          lifecycleStages:
          - BUILD
          - DEPLOY
          eventSource: NOT_APPLICABLE
          exclusions: []
          severity: HIGH_SEVERITY
          enforcementActions:
          - FAIL_BUILD_ENFORCEMENT
          - SCALE_TO_ZERO_ENFORCEMENT
          - UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT
          notifiers: []
          scope:
          - cluster: "{{clusters.json.clusters[0].id}}"
            namespace: user.*-dev,user.*-stage,user.*-prod
          SORTName: Trusted Signature Policy
          SORTLifecycleStage: BUILD,DEPLOY
          SORTEnforcement: true
          policyVersion: '1.1'
          policySections:
          - sectionName: Rule 1
            policyGroups:
            - fieldName: Image Signature Verified By
              booleanOperator: OR
              negate: false
              values:
              - value: "{{ cosign_integration.id }}"
          mitreAttackVectors: []
          criteriaLocked: false
          mitreVectorsLocked: false
          isDefault: false
          source: IMPERATIVE

    - name: Configure Quay Registry Integration
      herve4m.rhacs_configuration.rhacs_image_integration:
        name: Quay
        type: quay
        run_test: false
        quay:
          category: REGISTRY
          quay_host: registry-quay-quay-operator.{{ subdomain }}
        state: present
        rhacs_host: "{{ api_endpoint }}"
        rhacs_username: admin
        rhacs_password: "{{ password }}"
